{"version":3,"sources":["simple-comment-editing.js"],"names":["__","wp","i18n","_n","sce_hooks","hooks","createHooks","jQuery","document","ready","$","fn","simplecommentediting","sce_delete_comment","ajax_params","cid","element","siblings","off","remove","action","comment_id","post_id","pid","nonce","_wpnonce","response","errors","alert","simple_comment_editing","comment_deleted_error","parent","on","post","removeClass","addClass","html","comment_deleted","show","slideUp","setTimeout","find","attr","sce","$this","unserialize","ajax_url","e","preventDefault","css","fadeOut","prop","focus","val","textareas","allow_delete_confirmation","confirm","confirm_delete","fadeIn","trim","textarea_val","console","log","allow_delete","empty_comment","comment_to_save","triggerHandler","ajax_save_params","comment_content","applyFilters","error","comment_text","_ajax_nonce","minutes","seconds","parseInt","timer_text","get_timer_text","can_edit","trigger","timers","time","timer","timer_minutes","timer_seconds","timer_obj","diff","Date","getTime","start","window","original_minutes","Math","floor","original_seconds","abs","days","minute_to_seconds","text","hours","callback","date","expires","set_comment_cookie","toGMTString","cookie","Array","SCE_comment_scroll","event","comment","parse_comment","replaceWith","location","pattern","test","hash","offset","top","targetOffset","SCE_comments_updated","comment_url","match"],"mappings":"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","file":"simple-comment-editing.min.js","sourcesContent":["var __ = wp.i18n.__;\nvar _n = wp.i18n._n;\nvar sce_hooks = wp.hooks.createHooks();\njQuery( document ).ready( function( $ ) {\n\tvar sce = $.simplecommentediting = $.fn.simplecommentediting = function() {\n\t\tvar $this = this;\n\t\treturn this.each( function() {\n\t\t\tvar ajax_url = $( this ).find( 'a:first' ).attr( 'href' );\n\t\t\tvar ajax_params = wpAjax.unserialize( ajax_url );\n\t\t\tvar element = this;\n\n\t\t\t//Set up event for when the edit button is clicked\n\t\t\t$( element ).on( 'click', 'a:first', function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\t$( '#sce-edit-comment-status' + ajax_params.cid ).removeClass().addClass( 'sce-status' ).css( 'display', 'none' );\n\t\t\t\t//Hide the edit button and show the textarea\n\t\t\t\t$( element ).fadeOut( 'fast', function() {\n\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( 'button' ).prop( 'disabled', false );\n\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).fadeIn( 'fast', function() {\n\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( 'textarea:first' ).focus();\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\t//Cancel button\n\t\t\t$( element ).siblings( '.sce-textarea' ).on( 'click', '.sce-comment-cancel', function( e ) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t//Hide the textarea and show the edit button\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).fadeOut( 'fast', function() {\n\t\t\t\t\t$( element ).fadeIn( 'fast' );\n\t\t\t\t\t$( '#sce-edit-comment' + ajax_params.cid  + ' textarea' ).val( sce.textareas[ ajax_params.cid  ] );\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tfunction sce_delete_comment( element, ajax_params ) {\n                $( element ).siblings( '.sce-textarea' ).off();\n\t\t\t\t$( element ).off();\n\n\t\t\t\t//Remove elements\n\t\t\t\t$( element ).parent().remove();\n\t\t\t\t$.post( ajax_url, { action: 'sce_delete_comment', comment_id: ajax_params.cid, post_id: ajax_params.pid, nonce: ajax_params._wpnonce }, function( response ) {\n\t\t\t\t\t\tif ( response.errors ) {\n\t\t\t\t\t\t\talert( simple_comment_editing.comment_deleted_error );\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).on();\n\t\t\t\t\t\t\t$( element ).on();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$( '#sce-edit-comment-status' + ajax_params.cid ).removeClass().addClass( 'sce-status updated' ).html( simple_comment_editing.comment_deleted ).show();\n\t\t\t\t\t\t\tsetTimeout( function() { $( \"#comment-\" + ajax_params.cid ).slideUp(); }, 3000 ); //Attempt to remove the comment from the theme interface\n\t\t\t\t\t\t}\n\n\t\t\t\t}, 'json' );\n            };\n\n\t\t\t$( element ).siblings( '.sce-textarea' ).on( 'click', '.sce-comment-delete', function( e ) {\n    \t\t\te.preventDefault();\n\n    \t\t\tif ( simple_comment_editing.allow_delete_confirmation ) {\n\t    \t\t\tif( confirm( simple_comment_editing.confirm_delete ) ) {\n\t\t    \t\t\tsce_delete_comment( element, ajax_params );\n\t    \t\t\t}\n    \t\t\t} else {\n\t    \t\t\tsce_delete_comment( element, ajax_params );\n    \t\t\t}\n\n            } );\n\n\t\t\t//Save button\n\t\t\t$( element ).siblings( '.sce-textarea' ).on( 'click', '.sce-comment-save', function( e ) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( 'button' ).prop( 'disabled', true );\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).fadeOut( 'fast', function() {\n\t\t\t\t\t$( element ).siblings( '.sce-loading' ).fadeIn( 'fast' );\n\n\t\t\t\t\t//Save the comment\n\t\t\t\t\tvar textarea_val = $( element ).siblings( '.sce-textarea' ).find( 'textarea' ).val();\n\t\t\t\t\tvar comment_to_save = $.trim( textarea_val );\n\t\t\t\t\tif ( textarea_val == 'I am God' && typeof( console ) == 'object' ) {\n\t\t\t\t\t\tconsole.log( \"Isn't God perfect?  Why the need to edit?\" );\n\t\t\t\t\t}\n\n\t\t\t\t\t//If the comment is blank, see if the user wants to delete their comment\n\t\t\t\t\tif ( comment_to_save == '' && simple_comment_editing.allow_delete == true  ) {\n\t\t\t\t\t\tif ( confirm( simple_comment_editing.empty_comment ) ) {\n    \t\t\t\t\t\tsce_delete_comment( element, ajax_params );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$( '#sce-edit-comment' + ajax_params.cid  + ' textarea' ).val( sce.textareas[ ajax_params.cid  ] ); //revert value\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-loading' ).fadeOut( 'fast', function() {\n\t\t\t\t\t\t\t\t$( element ).fadeIn( 'fast' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t* Event: sce.comment.save.pre\n\t\t\t\t\t*\n\t\t\t\t\t* Event triggered before a comment is saved\n\t\t\t\t\t*\n\t\t\t\t\t* @since 1.4.0\n\t\t\t\t\t*\n\t\t\t\t\t* @param int $comment_id The Comment ID\n\t\t\t\t\t* @param int $post_id The Post ID\n\t\t\t\t\t*/\n\t\t\t\t\tjQuery( 'body' ).triggerHandler( 'sce.comment.save.pre', [ ajax_params.cid, ajax_params.pid ] );\n\t\t\t\t\tvar ajax_save_params = {\n\t\t\t\t\t\taction: 'sce_save_comment',\n\t\t\t\t\t\tcomment_content: comment_to_save,\n\t\t\t\t\t\tcomment_id: ajax_params.cid,\n\t\t\t\t\t\tpost_id: ajax_params.pid,\n\t\t\t\t\t\tnonce: ajax_params._wpnonce\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t* JSFilter: sce.comment.save.data\n\t\t\t\t\t*\n\t\t\t\t\t* Event triggered before a comment is saved\n\t\t\t\t\t*\n\t\t\t\t\t* @since 1.4.0\n\t\t\t\t\t*\n\t\t\t\t\t* @param object $ajax_save_params\n\t\t\t\t\t*/\n\t\t\t\t\tajax_save_params = sce_hooks.applyFilters( 'sce.comment.save.data', ajax_save_params );\n\n\t\t\t\t\t$.post( ajax_url, ajax_save_params, function( response ) {\n\t\t\t\t\t\t$( element ).siblings( '.sce-loading' ).fadeOut( 'fast', function() {\n\t\t\t\t\t\t\t$( element ).fadeIn( 'fast', function() {\n\t\t\t\t\t\t\t\tif ( !response.errors ) {\n\t\t\t\t\t\t\t\t\t$( '#sce-comment' + ajax_params.cid ).html( response.comment_text ); //Update comment HTML\n\t\t\t\t\t\t\t\t\tsce.textareas[ ajax_params.cid  ] = $( '#sce-edit-comment' + ajax_params.cid  + ' textarea' ).val(); //Update textarea placeholder\n\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t* Event: sce.comment.save\n\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t* Event triggered after a comment is saved\n\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t* @since 1.4.0\n\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t* @param int $comment_id The Comment ID\n\t\t\t\t\t\t\t\t\t* @param int $post_id The Post ID\n\t\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\t\tjQuery( 'body' ).triggerHandler( 'sce.comment.save', [ ajax_params.cid, ajax_params.pid ] );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//Output error, maybe kill interface\n\t\t\t\t\t\t\t\t\tif ( response.remove == true ) {\n\t\t\t\t\t\t\t\t\t\t//Remove event handlers\n\t\t\t\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).off();\n\t\t\t\t\t\t\t\t\t\t$( element ).off();\n\n\t\t\t\t\t\t\t\t\t\t//Remove elements\n\t\t\t\t\t\t\t\t\t\t$( element ).parent().remove();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$( '#sce-edit-comment-status' + ajax_params.cid ).removeClass().addClass( 'sce-status error' ).html( response.error ).show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}, 'json' );\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\t//Load timers\n\t\t\t/*\n\t\t\t1.  Use Ajax to get the amount of time left to edit the comment.\n\t\t\t2.  Display the result\n\t\t\t3.  Set Interval\n\t\t\t*/\n\t\t\t$.post( ajax_url, { action: 'sce_get_time_left', comment_id: ajax_params.cid, post_id: ajax_params.pid, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\t//Set initial timer text\n\t\t\t\tif( 'unlimited' === response.minutes && 'unlimited' === response.seconds ) {\n\t\t\t\t\t$( element ).show( 400 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar minutes = parseInt( response.minutes );\n\t\t\t\tvar seconds = parseInt( response.seconds );\n\t\t\t\tvar timer_text = sce.get_timer_text( minutes, seconds );\n\n\t\t\t\t//Determine via JS if a user can edit a comment - Note that if someone were to finnagle with this, there is still a server side check when saving the comment\n\t\t\t\tvar can_edit = response.can_edit;\n\t\t\t\tif ( !can_edit ) {\n\t\t\t\t\t//Remove event handlers\n\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).off();\n\t\t\t\t\t$( element ).off();\n\n\t\t\t\t\t//Remove elements\n\t\t\t\t\t$( element ).parent().remove();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//Update the timer and show the editing interface\n\t\t\t\t$( element ).find( '.sce-timer' ).html( timer_text );\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( '.sce-timer' ).html( timer_text );\n\n\t\t\t\t$( element ).show( 400, function() {\n\t\t\t\t\t/**\n\t\t\t\t\t* Event: sce.timer.loaded\n\t\t\t\t\t*\n\t\t\t\t\t* Event triggered after a commen's timer has been loaded\n\t\t\t\t\t*\n\t\t\t\t\t* @since 1.3.0\n\t\t\t\t\t*\n\t\t\t\t\t* @param jQuery Element of the comment\n\t\t\t\t\t*/\n\t\t\t\t\t$( element ).trigger( 'sce.timer.loaded', element );\n\t\t\t\t\tconsole.log( element );\n\t\t\t\t} );\n\n\t\t\t\t//Save state in textarea\n\t\t\t\tsce.textareas[ response.comment_id ] = $( '#sce-edit-comment' + response.comment_id + ' textarea' ).val();\n\n\t\t\t\t//Set interval\n\t\t\t\tsce.timers[ response.comment_id ] = {\n\t\t\t\t\tminutes: minutes,\n\t\t\t\t\tseconds: seconds,\n\t\t\t\t\tstart: new Date().getTime(),\n\t\t\t\t\ttime: 0,\n\t\t\t\t\ttimer: function() {\n\n\t\t\t\t\t\tvar timer_seconds = sce.timers[ response.comment_id ].seconds - 1;\n\t\t\t\t\t\tvar timer_minutes = sce.timers[ response.comment_id ].minutes;\n\t\t\t\t\t\tif ( timer_minutes <=0 && timer_seconds <= 0) {\n\n\t\t\t\t\t\t\t//Remove event handlers\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).off();\n\t\t\t\t\t\t\t$( element ).off();\n\n\t\t\t\t\t\t\t//Remove elements\n\t\t\t\t\t\t\t$( element ).parent().remove();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ( timer_seconds < 0 ) {\n\t\t\t\t\t\t\t\ttimer_minutes -= 1; timer_seconds = 59;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar timer_text = sce.get_timer_text( timer_minutes, timer_seconds );\n\t\t\t\t\t\t\t$( element ).find( '.sce-timer' ).html(  timer_text );\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( '.sce-timer' ).html( timer_text );\n\t\t\t\t\t\t\t$( element ).trigger( 'sce.timer.countdown', element );\n\t\t\t\t\t\t\tsce.timers[ response.comment_id ].seconds = timer_seconds;\n\t\t\t\t\t\t\tsce.timers[ response.comment_id ].minutes = timer_minutes;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//Get accurate time\n\t\t\t\t\t\tvar timer_obj = sce.timers[ response.comment_id ];\n\t\t\t\t\t\ttimer_obj.time += 1000;\n\t\t\t\t\t\tvar diff = ( new Date().getTime() - timer_obj.start ) - timer_obj.time;\n\t\t\t\t\t\twindow.setTimeout( timer_obj.timer, ( 1000 - diff ) );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\twindow.setTimeout( sce.timers[ response.comment_id ].timer, 1000 );\n\n\n\t\t\t}, 'json' );\n\t\t} );\n\t};\n\tsce.get_timer_text = function( minutes, seconds ) {\n\t\tvar original_minutes = minutes;\n\t\tvar original_seconds = seconds;\n\t\tif (seconds < 0) { minutes -= 1; seconds = 59; }\n\t\t//Create timer text\n\t\tvar text = '';\n\t\tif (minutes >= 1) {\n\n\t\t\t// Get mniutes in seconds\n\t\t\tvar minute_to_seconds = Math.abs(minutes * 60);\n\t\t\tvar days = Math.floor(minute_to_seconds / 86400);\n\n\t\t\t// Get Days\n\t\t\tif( days > 0 ) {\n\t\t\t\t// Get days\n\t\t\t\ttext += days + \" \" + _n('day', 'days', days, 'simple-comment-editing');\n\t\t\t\ttext += \" \" + __('and', 'simple-comment-editing') + \" \";\n\t\t\t\tminute_to_seconds -= days * 86400;\n\t\t\t}\n\n\t\t\t// Get hours\n\t\t\tvar hours = Math.floor(minute_to_seconds / 3600) % 24;\n\t\t\tif( hours >= 0 ) {\n\t\t\t\tif( hours > 0 ) {\n\t\t\t\t\ttext += hours + \" \" + _n('hour', 'hours', hours, 'simple-comment-editing');\n\t\t\t\t\ttext += \" \" + __('and', 'simple-comment-editing') + \" \";\n\t\t\t\t}\n\t\t\t\tminute_to_seconds -= hours * 3600;\n\t\t\t}\n\n\t\t\t// Get minutes\n\t\t\tvar minutes = Math.floor(minute_to_seconds / 60) % 60;\n\t\t\tminute_to_seconds -= minutes;\n\t\t\tif( minutes > 0 ) {\n\t\t\t\ttext += minutes + \" \" + _n('minute', 'minutes', minutes, 'simple-comment-editing');\n\t\t\t}\n\n\t\t\t// Get seconds\n\t\t\tif ( seconds > 0 ) {\n\t\t\t\ttext += \" \" + __('and', 'simple-comment-editing') + \" \";\n\t\t\t\ttext += seconds + \" \" + _n('second', 'seconds', seconds, 'simple-comment-editing');\n\t\t\t}\n\t\t} else {\n\t\t\ttext += seconds + \" \" + _n('second', 'seconds', seconds, 'simple-comment-editing');\n\t\t}\n\t\t/**\n\t\t* JSFilter: sce.comment.timer.text\n\t\t*\n\t\t* Filter triggered before a timer is returned\n\t\t*\n\t\t* @since 1.4.0\n\t\t*\n\t\t* @param string comment text\n\t\t* @param string minute text,\n\t\t* @param string second text,\n\t\t* @param int    number of minutes left\n\t\t* @param int    seconds left\n\t\t*/\n\t\ttext = sce_hooks.applyFilters( 'sce.comment.timer.text', text,  _n('day', 'days', days, 'simple-comment-editing'), _n('hour', 'hours', hours, 'simple-comment-editing'), _n('minute', 'minutes', minutes, 'simple-comment-editing'), _n('second', 'seconds', seconds, 'simple-comment-editing'), days, hours, minutes, seconds );\n\t\treturn text;\n\t};\n\tsce.set_comment_cookie = function( pid, cid, callback ) {\n\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_get_cookie_var', post_id: pid, comment_id: cid, _ajax_nonce: simple_comment_editing.nonce\t }, function( response ) {\n\t\t\tvar date = new Date( response.expires );\n\t\t\tdate = date.toGMTString();\n\t\t\tdocument.cookie = response.name+\"=\"+response.value+ \"; expires=\" + date+\"; path=\" + response.path;\n\n\t\t\tif ( typeof callback == \"function\" ) {\n\t\t\t\tcallback( cid );\n\t\t\t}\n\n\t\t}, 'json' );\n\t};\n\n\tsce.timers = new Array();\n\tsce.textareas = new Array();\n\t$( '.sce-edit-button' ).simplecommentediting();\n\n\t$( '.sce-edit-button' ).on( 'sce.timer.loaded', SCE_comment_scroll );\n\n\t//Third-party plugin compatibility\n\t$( 'body' ).on( 'comment.posted', function( event, post_id, comment_id ) {\n\t\tsce.set_comment_cookie( post_id, comment_id, function( comment_id ) {\n\t\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_get_comment', comment_id: comment_id, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\n\t\t\t\t/**\n\t\t\t\t* Event: sce.comment.loaded\n\t\t\t\t*\n\t\t\t\t* Event triggered after SCE has loaded a comment.\n\t\t\t\t*\n\t\t\t\t* @since 1.3.0\n\t\t\t\t*\n\t\t\t\t* @param object Comment Object\n\t\t\t\t*/\n\t\t\t\t$( 'body' ).trigger( 'sce.comment.loaded', [ response ] );\n\n\t\t\t\t/*\n\t\t\t\tOnce you capture the sce.comment.loaded event, you can replace the comment and enable SCE\n\t\t\t\t$( '#comment-' + comment_id ).replaceWith( comment_html );\n\t\t\t\t$( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\t\t\t*/\n\n\t\t\t}, 'json' );\n\t\t} );\n\t} );\n\n\t//EPOCH Compability\n\t$( 'body' ).on( 'epoch.comment.posted', function( event, pid, cid ) {\n    \tif ( typeof pid == 'undefined' ) {\n\t    \treturn;\n    \t}\n\t\t//Ajax call to set SCE cookie\n\t\tsce.set_comment_cookie( pid, cid, function( comment_id ) {\n\t\t\t//Ajax call to get new comment and load it\n\t\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_epoch_get_comment', comment_id: comment_id, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\tcomment = Epoch.parse_comment( response );\n\t\t\t\t$( '#comment-' + comment_id ).replaceWith( comment );\n\t\t\t\t$( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\t\t}, 'json' );\n\t\t} );\n\t} );\n\t$( 'body' ).on( 'epoch.comments.loaded, epoch.two.comments.loaded', function( e ) {\n\t\tsetTimeout( function() {\n\t\t\t$( '.sce-edit-button' ).simplecommentediting();\n\t\t}, 1000 );\n\t} );\n\t$( 'body' ).on( 'epoch.two.comment.posted', function( event ) {\n    \t//Ajax call to set SCE cookie\n    \tcomment_id = event.comment_id;\n\t\tsce.set_comment_cookie( event.post, comment_id, function( comment_id ) {\n\t\t\t//Ajax call to get new comment and load it\n\t\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_epoch2_get_comment', comment_id: comment_id, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\t$( '#comment-' + comment_id ).find( 'p' ).parent().html( response );\n\t\t\t\t$( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\t\t} );\n\t\t} );\n\t} );\n} );\n\nfunction SCE_comment_scroll( e, element ) {\n\tvar location = \"\" + window.location;\n\tvar pattern = /(#[^-]*\\-[^&]*)/;\n\tif ( pattern.test( location ) ) {\n\t\tlocation = jQuery( \"\" + window.location.hash );\n\t\tif ( location.length > 0 ) {\n\t\t\tvar targetOffset = location.offset().top;\n\t\t\tjQuery( 'html,body' ).animate( {scrollTop: targetOffset}, 1 );\n\t\t}\n\t}\n}\n//Callback when comments have been updated (for wp-ajaxify-comments compatibility) - http://wordpress.org/plugins/wp-ajaxify-comments/faq/\nfunction SCE_comments_updated( comment_url ) {\n\tvar match = comment_url.match(/comment-(\\d+)/)\n\tif ( !match ) {\n\t\treturn;\n\t}\n\tvar comment_id = match[ 1 ];\n\tjQuery( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\n};"]}